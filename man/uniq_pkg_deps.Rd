% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uniq_pkg_deps.R
\name{uniq_pkg_deps}
\alias{uniq_pkg_deps}
\title{Count unique dependencies}
\usage{
uniq_pkg_deps(
  pkg,
  dep_type = c("depends", "imports", "linkingto"),
  pak_res = NULL,
  order = 1
)
}
\arguments{
\item{pkg}{a package to check}

\item{order}{Consider combinations of this many packages. Be careful going
beyond 3.}
}
\value{
A data.table listing the packages and the number of unique
  dependencies.
}
\description{
A function for package developers to count which direct
  dependencies add the most unique dependencies (direct plus downstream) in
  total.
}
\details{
Use this function to identify which packages have the most unique
  downstream dependencies. For a package author, these are good targets to
  prioritize for removal.

  Because of the graph structure of dependencies, sometimes there isn't any
  one package that adds a lot of unique dependencies, but there is a PAIR or
  TRIPLET do. Set the \code{order} argument to check
  which pairs, triplets, etc have the most unique dependencies. Be careful
  going beyond 3 because the number of combinations grows quickly, and I
  haven't optimized the internals of this function much :)
}
\examples{
# pkgcache isn't allowed in examples, uncomment and run interactively:
# uniq_pkg_deps("ggplot2")
# ^ scales adds the most unique dependencies to ggplot2 -- 6 including itself.
}
\seealso{
[plot_deps_graph()]
}
